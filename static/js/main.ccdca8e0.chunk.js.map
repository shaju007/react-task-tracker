{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","img/Rolling-1.5s-48px.svg","components/Footer.js","components/About.js","util/firebase.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","showAddTask","style","backgroundColor","className","defaultProps","Header","title","toggleAddForm","smth","showAddTaskValue","location","useLocation","pathname","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","onAdd","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","console","log","alert","type","placeholder","value","onChange","target","checked","currentTarget","Footer","to","About","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","deleteCounter","setDeleteCounter","useEffect","setShowAddTask","setTasks","loading","setLoading","getTasks","a","fetchTasks","tasksFromServer","fetch","res","json","data","deleteTask","method","filter","fetchTask","toggleReminder","taskToToggle","updTask","headers","body","JSON","stringify","addTask","length","newTask","path","exact","render","props","textAlign","src","loadingImage","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccdca8e0.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ color, text, onClick, showAddTask }) => {\r\n  return (\r\n    <button\r\n      onClick={onClick}\r\n      style={{ backgroundColor: color }}\r\n      className='btn'\r\n    >\r\n      {text}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.defaultProps = {\r\n  color: 'steelblue',\r\n  text: 'Add',\r\n};\r\n\r\nButton.propTypes = {\r\n  color: PropTypes.string,\r\n  text: PropTypes.string,\r\n  onClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import PropTypes from 'prop-types';\r\nimport { useLocation } from 'react-router';\r\nimport Button from './Button';\r\nconst Header = ({ title, smth, toggleAddForm, showAddTaskValue }) => {\r\n  const location = useLocation();\r\n  return (\r\n    <header className='header'>\r\n      {/* <h1>\r\n        Task Tracker {title} {smth}\r\n      </h1>\r\n      <h2 style={{ color: 'red' }}>heading style</h2>\r\n      <h3 style={style}>variable style</h3> */}\r\n      <h1>{title}</h1>\r\n      {location.pathname === '/' && (\r\n        <Button\r\n          color={showAddTaskValue ? 'red' : 'green'}\r\n          text={showAddTaskValue ? 'Close' : 'Add'}\r\n          onClick={toggleAddForm}\r\n        />\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  title: 'Task Tracker',\r\n};\r\n// Header.propTypes = {\r\n//   title: PropTypes.number.isRequired,\r\n// };\r\nconst style = {\r\n  color: 'red',\r\n  backgroundColor: '#000',\r\n};\r\nexport default Header;\r\n","import { FaTimes } from 'react-icons/fa';\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n  return (\r\n    <div\r\n      className={`task ${task.reminder ? 'reminder' : ''}`}\r\n      onDoubleClick={() => onToggle(task.id)}\r\n    >\r\n      <h3>\r\n        {task.text}{' '}\r\n        <FaTimes\r\n          style={{ color: 'red', cursor: 'pointer' }}\r\n          onClick={() => onDelete(task.id)}\r\n        />\r\n      </h3>\r\n      <p>{task.day}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import Task from './Task';\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n  return (\r\n    <>\r\n      {tasks.map((task) => (\r\n        <Task\r\n          key={task.id}\r\n          task={task}\r\n          onDelete={onDelete}\r\n          onToggle={onToggle}\r\n        />\r\n      ))}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from 'react';\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n  const [text, setText] = useState('');\r\n  const [day, setDay] = useState('');\r\n  const [reminder, setReminder] = useState(false);\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log('submit clicked');\r\n    if (!text) {\r\n      alert('Please add a task');\r\n      return;\r\n    }\r\n    onAdd({ text, day, reminder });\r\n\r\n    // clear the form\r\n    setText('');\r\n    setDay('');\r\n    setReminder(false);\r\n  };\r\n\r\n  return (\r\n    <form className='add-form' onSubmit={onSubmit}>\r\n      <div className='form-control'>\r\n        <label>Task</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add Task'\r\n          value={text}\r\n          onChange={(e) => setText(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control'>\r\n        <label>Day and time</label>\r\n        <input\r\n          type='text'\r\n          placeholder='Add day and time'\r\n          value={day}\r\n          onChange={(e) => setDay(e.target.value)}\r\n        />\r\n      </div>\r\n      <div className='form-control form-control-check'>\r\n        <label>Set reminder</label>\r\n        <input\r\n          type='checkbox'\r\n          value={reminder}\r\n          checked={reminder}\r\n          onChange={(e) => setReminder(e.currentTarget.checked)}\r\n        />\r\n      </div>\r\n      <input type='submit' value='Save Task' className='btn btn-block' />\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","export default __webpack_public_path__ + \"static/media/Rolling-1.5s-48px.919f5fd7.svg\";","import { Link } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n  return (\r\n    <footer>\r\n      <p>Copyright &copy; 2021</p>\r\n      <Link to='/about'>About</Link>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import { Link } from 'react-router-dom';\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <h4>Version 1.0.0</h4>\r\n      <Link to='/'>Go Back</Link>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","//import firebase from 'firebase/app';\r\n// Import the functions you need from the SDKs you need\r\nimport { initializeApp } from 'firebase/app';\r\n\r\n// TODO: Add SDKs for Firebase products that you want to use\r\n// https://firebase.google.com/docs/web/setup#available-libraries\r\n\r\n// Your web app's Firebase configuration\r\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\r\nconst firebaseConfig = {\r\n  apiKey: 'AIzaSyACW_hbKAtbV7uiVOhbbVPv0fYGxr6uYWI',\r\n  authDomain: 'react-task-tracker-4d93f.firebaseapp.com',\r\n  databaseURL:\r\n    'https://react-task-tracker-4d93f-default-rtdb.europe-west1.firebasedatabase.app',\r\n  projectId: 'react-task-tracker-4d93f',\r\n  storageBucket: 'react-task-tracker-4d93f.appspot.com',\r\n  messagingSenderId: '967108248939',\r\n  appId: '1:967108248939:web:87138ad45d07daa1c0f82e',\r\n  measurementId: 'G-4HGTEJSQ54',\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nexport default app;\r\n//export default firebase;\r\n","import Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { useState, useEffect } from 'react';\nimport loadingImage from './img/Rolling-1.5s-48px.svg';\nimport Footer from './components/Footer';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport About from './components/About';\nimport app from './util/firebase';\n\nfunction App() {\n  const [deleteCounter, setDeleteCounter] = useState(0);\n  useEffect(() => {\n    //console.log(deleteCounter);\n  });\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      setLoading(true);\n      const tasksFromServer = await fetchTasks();\n      setLoading(false);\n      setTasks(tasksFromServer);\n    };\n    getTasks();\n  }, []);\n\n  // Fetch tasks\n  const fetchTasks = async () => {\n    const res = await fetch('https://new-fake-server-app.herokuapp.com/tasks');\n    const data = await res.json();\n    return data;\n  };\n\n  // Delete a task\n  const deleteTask = async (id) => {\n    await fetch(`https://new-fake-server-app.herokuapp.com/tasks/${id}`, {\n      method: 'DELETE',\n    });\n    setTasks(tasks.filter((task) => task.id !== id));\n    setDeleteCounter(deleteCounter + 1);\n\n    //console.log(deleteCounter);\n  };\n\n  // Fetch a single task\n  const fetchTask = async (id) => {\n    const res = await fetch(\n      `https://new-fake-server-app.herokuapp.com/tasks/${id}`\n    );\n    const data = await res.json();\n    return data;\n  };\n\n  // Toggle reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder };\n\n    const res = await fetch(\n      `https://new-fake-server-app.herokuapp.com/tasks/${id}`,\n      {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(updTask),\n      }\n    );\n\n    const data = await res.json();\n\n    setTasks(\n      tasks.map((task) => {\n        return task.id === id ? { ...task, reminder: data.reminder } : task;\n      })\n    );\n  };\n\n  // Add task\n  const addTask = async (task) => {\n    // increment id by one\n    const id = 1 + tasks.length + deleteCounter;\n    const newTask = { ...task, id };\n\n    const res = await fetch('https://new-fake-server-app.herokuapp.com/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json',\n      },\n      body: JSON.stringify(newTask),\n    });\n\n    const data = await res.json();\n\n    setTasks([...tasks, data]);\n  };\n  useEffect(() => {\n    //console.log(tasks);\n  });\n\n  return (\n    <Router>\n      <div className='container'>\n        <Header\n          smth='ss'\n          toggleAddForm={() => setShowAddTask(!showAddTask)}\n          showAddTaskValue={showAddTask}\n        />\n\n        <Route\n          path='/'\n          exact\n          render={(props) => (\n            <>\n              {showAddTask && <AddTask onAdd={addTask} />}\n              {loading ? (\n                <div style={{ textAlign: 'center' }}>\n                  <img src={loadingImage} />\n                </div>\n              ) : tasks.length > 0 ? (\n                <Tasks\n                  tasks={tasks}\n                  onDelete={deleteTask}\n                  onToggle={toggleReminder}\n                />\n              ) : (\n                'No Tasks to Show'\n              )}\n            </>\n          )}\n        />\n\n        <Route path='/about' component={About} />\n\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}